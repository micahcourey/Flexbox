/* =================================
  Base Styles
==================================== */

/*** Make the body a flex container with a min-height 100% of the view port to be
     able to make the footer stick to the bottom of the page  ***/
body {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}
/*** Give .row columns a value of 1 so that the columns will fill the available
     screen space and force the footer to the bottom of the page ***/
.row {
  flex: 1;
}


/* =================================
  Media Queries
==================================== */

@media (min-width: 769px) {
  /*** Make these page elements flex containers ***/
  .main-header, .main-nav, .row, .col {
    display: flex;
  }
  /*** Display header links horizontally and centered ***/
  .main-header {
    flex-direction: column;
    align-items: center;
  }
  /*** Give each column a flex value of 1 so each column takes up the same amount of space
       and set the flex direction value to column so the content is displayed vertically  ***/
  .col {
    flex: 1;
    flex-direction: column;
  }
  /*** Make the .row content a multi-line flex container ***/
  .row {
    flex-wrap: wrap;
  }
  /*** Give the secodary content column a order value of -1 so that it appears first ***/
  .secondary {
    order: -1;
  }
  /*** Apply auto to the top margin of the buttons so they align at the bottom of their
      flex container and apply align-self property with the flex-start value so the buttons
      don't stretch the full width of their parent container ***/
  .button {
    margin-top: auto;
    align-self: flex-start;
  }


}

@media (min-width: 1025px) {
  /*** Display nav bar on 1 line with links on right and title on left ***/
  .main-header {
    flex-direction: row;
    justify-content: space-between;
  }
  /*** Display all 3 columns on 1 line ***/
  .col {
    flex-basis: 0;
  }
  /*** Make the primary content column larger ***/
  .primary {
    flex-grow: 1.4;
  }
}
